lua/core/options.lua:g.mapleader = " "
lua/core/mappings.lua:		["<leader>n"] = { "<cmd> set nu! <CR>", "toggle line number" },
lua/core/mappings.lua:		["<leader>ra"] = { "<cmd> set rnu! <CR>", "toggle relative number" },
lua/core/mappings.lua:		["<leader>uu"] = { "<cmd> :NvChadUpdate <CR>", "update nvchad" },
lua/core/mappings.lua:		["<leader>tt"] = {
lua/core/mappings.lua:		["<leader>b"] = { "<cmd> enew <CR>", "new buffer" },
lua/core/mappings.lua:		["<leader>x"] = {
lua/core/mappings.lua:		["<leader>/"] = {
lua/core/mappings.lua:		["<leader>/"] = {
lua/core/mappings.lua:		["<leader>ls"] = {
lua/core/mappings.lua:		["<leader>D"] = {
lua/core/mappings.lua:		["<leader>rn"] = {
lua/core/mappings.lua:		["<leader>ca"] = {
lua/core/mappings.lua:		["<leader>f"] = {
lua/core/mappings.lua:		["<leader>q"] = {
lua/core/mappings.lua:		["<leader>fm"] = {
lua/core/mappings.lua:		["<leader>wa"] = {
lua/core/mappings.lua:		["<leader>wr"] = {
lua/core/mappings.lua:		["<leader>wl"] = {
lua/core/mappings.lua:		["<leader>e"] = { "<cmd> NvimTreeFocus <CR>", "focus nvimtree" },
lua/core/mappings.lua:		["<leader>ff"] = { "<cmd> Telescope find_files <CR>", "find files" },
lua/core/mappings.lua:		["<leader>fa"] = { "<cmd> Telescope find_files follow=true no_ignore=true hidden=true <CR>", "find all" },
lua/core/mappings.lua:		["<leader>fw"] = { "<cmd> Telescope live_grep <CR>", "live grep" },
lua/core/mappings.lua:		["<leader>fb"] = { "<cmd> Telescope buffers <CR>", "find buffers" },
lua/core/mappings.lua:		["<leader>fh"] = { "<cmd> Telescope help_tags <CR>", "help page" },
lua/core/mappings.lua:		["<leader>fo"] = { "<cmd> Telescope oldfiles <CR>", "find oldfiles" },
lua/core/mappings.lua:		["<leader>tk"] = { "<cmd> Telescope keymaps <CR>", "show keys" },
lua/core/mappings.lua:		-- ["<leader>fn"] = { "<cmd> Telescope neorg switch_workspace <CR>", "neorg switch workspace" },
lua/core/mappings.lua:		["<leader>cm"] = { "<cmd> Telescope git_commits <CR>", "git commits" },
lua/core/mappings.lua:		["<leader>gt"] = { "<cmd> Telescope git_status <CR>", "git status" },
lua/core/mappings.lua:		["<leader>pt"] = { "<cmd> Telescope terms <CR>", "pick hidden term" },
lua/core/mappings.lua:		["<leader>th"] = { "<cmd> Telescope themes <CR>", "nvchad themes" },
lua/core/mappings.lua:		-- ["<leader>h"] = {
lua/core/mappings.lua:		-- ["<leader>v"] = {
lua/core/mappings.lua:		["<leader>wK"] = {
lua/core/mappings.lua:		["<leader>wk"] = {
lua/core/mappings.lua:		["<leader>cc"] = {
lua/plugins/configs/alpha.lua:	local sc_ = sc:gsub("%s", ""):gsub("SPC", "<leader>")
lua/plugins/init.lua:		keys = { "<leader>", '"', "'", "`" },
lua/custom/plugins/neorg.lua:		-- 			toggle = "<leader>o",
lua/custom/plugins/neorg.lua:		-- 			toggle = "<leader>t",
lua/custom/plugins/null-ls.lua:        vim.keymap.set("n", "<Leader>f", function()
lua/custom/plugins/null-ls.lua:        vim.keymap.set("x", "<Leader>f", function()
lua/custom/plugins/avante.lua:		ask = "<leader>aa",
lua/custom/plugins/avante.lua:		edit = "<leader>ae",
lua/custom/plugins/avante.lua:		refresh = "<leader>ar",
lua/custom/mappings.lua:		["<leader>ta"] = { "<cmd> TZAtaraxis <CR>", "truzen ataraxis" },
lua/custom/mappings.lua:		["<leader>tm"] = { "<cmd> TZMinimalist <CR>", "truzen minimal" },
lua/custom/mappings.lua:		["<leader>tf"] = { "<cmd> TZFocus <CR>", "truzen focus" },
lua/custom/mappings.lua:		["<leader>a"] = { "<cmd>AerialToggle!<CR>", "Toggle Aerial" },
lua/custom/mappings.lua:		["<leader>cu"] = { "<cmd> TSCaptureUnderCursor <CR>", "find media" },
lua/custom/mappings.lua:		["<leader>s"] = {
lua/custom/mappings.lua:		["<leader>cc"] = { ":BufferCloseAllButCurrentOrPinned<CR>", "Close all but keep current or pinned" },
lua/custom/mappings.lua:		["<leader>hl"] = { ":HopLineStart<CR>" },
lua/custom/mappings.lua:		["<leader>hw"] = { ":HopWordCurrentLine<CR>" },
lua/custom/mappings.lua:		["<leader>ft"] = { ":TodoTelescope<cr>", "ï€‚   Open Todo Telescope" },
lua/custom/mappings.lua:		["<leader>ce"] = { "<cmd>Copilot enable<CR>", "Enable Copilot" },
lua/custom/mappings.lua:		["<leader>cd"] = { "<cmd>Copilot disable<CR>", "Disable Copilot" },
